<Window x:Class="OS2faktor.UI.NewNotification"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OS2faktor.UI"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        mc:Ignorable="d"
       Title="Notification Popup" Width="540" SizeToContent="Height" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Padding="20,20,20,20" MouseDown="Window_MouseDown" TextInput="Window_TextInput" KeyDown="Window_KeyDown" Closed="NotificationClosed" Deactivated="Window_Deactivated">
    <Window.Resources>
        <!--Bootstrap like buttons-->
        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                            <GradientStop Color="#22000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--default button highlight-->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--inner drop shadow when pressed / checked-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Example. Actually not used-->
        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#333"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#ccc"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="our-button" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#ECECEC"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#dd425594"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#9A9A9A"/>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Button.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#444" Direction="270" ShadowDepth="3" BlurRadius="2" Opacity="0.2" RenderingBias="Quality" />
                </Setter.Value>
            </Setter>-->
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="120">
                            <ColorAnimation From="#dd6f7dad" To="#FF7885b2" Duration="0:0:0.045" Storyboard.TargetProperty="(Button.Background).Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="120">
                            <ColorAnimation From="#FF7885b2" To="#dd6f7dad" Duration="0:0:0.045" Storyboard.TargetProperty="(Button.Background).Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#8490b9"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Transparent Button Styling-->
        <Style x:Key="TransparentStyle" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <!--Button mouseover-->
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="120">
                            <ColorAnimation From="Transparent" To="#68E8E8E8" Duration="0:0:0.045" Storyboard.TargetProperty="(Button.Background).Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="120">
                            <ColorAnimation From="#68E8E8E8" To="Transparent" Duration="0:0:0.045" Storyboard.TargetProperty="(Button.Background).Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!--PIN box Animation-->
        <Storyboard x:Key="ShakeAnimation">
            <DoubleAnimation From="-8" To="8" Duration="0:0:0.08"
                                     AutoReverse="True" RepeatBehavior="3x"
                                     FillBehavior="Stop" Storyboard.TargetName="MovePIN" Storyboard.TargetProperty="X"/>
        </Storyboard>
    </Window.Resources>
    <Grid Margin="20,20,20,20">
        <!--Grid Shadow pretending to be window shadow-->
        <Grid.Effect>
            <DropShadowEffect Color="#444" BlurRadius="4" Direction="270" RenderingBias="Performance" ShadowDepth="3" Opacity="0.2"/>
        </Grid.Effect>
        <Border BorderThickness="0" CornerRadius="10" Background="#DD59689d">
            <StackPanel Margin="20">
                <Grid Height="36">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=logo, Path=ActualWidth}" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="{Binding ElementName=logo, Path=ActualWidth}"/>
                    </Grid.ColumnDefinitions>
                    <!--Logo-->
                    <Image x:Name="logo" Grid.Column="0" Source="/Resources/os2faktor-gray.png" HorizontalAlignment="Left" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <!--Close Button-->
                    <Button x:Name="btnClose" Grid.Column="2" Style="{StaticResource TransparentStyle}" HorizontalAlignment="Right" Click="btnClose_Click">
                        <Image Source="/Resources/close-gray.png"/>
                    </Button>
                </Grid>
                <Grid Height="130">
                    <!--Notification Content-->
                    <Viewbox Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,31,0,0" Height="34" Width="240">
                        <TextBlock x:Name="tbServerName"  Foreground="#ececec" Text="ServerName" />
                    </Viewbox>
                    <TextBlock x:Name="tbCode" Foreground="#ececec" FontSize="48" Text="CODE" Margin="0,31,11,0" HorizontalAlignment="Right" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" FontFamily="Red Hat Mono Light"/>
                    <TextBlock x:Name="tbTime" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#ececec" FontSize="14" Text="Time" Margin="5,70,0,0"/>
                    <TextBlock x:Name="tbText" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10" FontSize="14" Padding="2,2,2,0" Foreground="White" RenderOptions.ClearTypeHint="Enabled"  FontFamily="Red Hat Mono Light">
                        Indtast PIN-kode
                    </TextBlock>
                </Grid>
                <Grid>
                    <!--Apply Button-->
                    <Button x:Name="btnApply" Style="{StaticResource our-button}" HorizontalAlignment="Center" Content="Godkend Login" Click="btnApply_Click"/>
                    <!--PIN-code UI-->
                    <TextBlock x:Name="tbPIN" Foreground="#ececec" FontSize="24" Text="&#x26AA;&#x26AA;&#x26AA;&#x26AB;" HorizontalAlignment="Center" VerticalAlignment="Center" FontStyle="Normal" FontFamily="Red Hat Mono Light">
                        <TextBlock.RenderTransform>
                            <TranslateTransform x:Name="MovePIN" X="0"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</Window>
